
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.Вариант = ВариантСтандартногоПериода.СНачалаЭтогоМесяца;
	Выборка        = Справочники.Валюты.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Валюты.Добавить();
		НоваяСтрока.Валюта = Выборка.Ссылка;
		НоваяСтрока.Выбран = Истина;
		НоваяСтрока.Код    = Выборка.Код;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	КомандаЗагрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗагрузитьНаСервере()
  	Адрес = "http://www.cbr.ru/DailyInfoWebServ/DailyInfo.asmx?WSDL";
    
	Попытка
        Определения = Новый WSОпределения(Адрес,"","", 60);
		URI         = "http://web.cbr.ru/";
		Прокси      = Новый WSПрокси(Определения, URI, "DailyInfo", "DailyInfoSoap");
    Исключение
 		Сообщить(НСтр("ru = 'Подключиться не удалось!'; en = 'Connection failed!'"));
		Возврат;
	КонецПопытки;
	
	Попытка
		//Получаем тип параметра, который передается в метод GetCursOnDate.
		ТипWSПараметра = Прокси.ФабрикаXDTO.Пакеты.Получить("http://web.cbr.ru/").Получить("GetCursOnDate");
		//Создаем параметр на основе типа и заполняем значение параметра On_Date.
		WSПараметр	       = Прокси.ФабрикаXDTO.Создать(ТипWSПараметра);
		
		мДата = Период.ДатаНачала;
		
		Пока мДата <= Период.ДатаОкончания Цикл
			WSПараметр.On_Date = мДата;
			КурсыВалют         = Прокси.GetCursOnDate(WSПараметр);
			Для Каждого Элемент Из КурсыВалют.GetCursOnDateResult.diffgram.ValuteData.ValuteCursOnDate Цикл 
				мКод = Формат(Число(Элемент.Vcode),"ЧЦ=3; ЧВН=");
				ИскомыеСтроки = Валюты.НайтиСтроки(Новый Структура("Код,Выбран",мКод,Истина));
				Для Каждого ИскомаяСтрока Из ИскомыеСтроки Цикл
					Запись = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
					Запись.Валюта    = ИскомаяСтрока.Валюта;
					Запись.Период    = НачалоДня(мДата);
					Запись.Курс      = Элемент.Vcurs;
					Запись.Кратность = Элемент.Vnom;
					Запись.Записать();
				КонецЦикла;	
			КонецЦикла;
			мДата = КонецДня(мДата) + 1;
		КонецЦикла;
 		Сообщить(НСтр("ru = 'Курсы загружены!'; en = 'Rates loaded!'"));
	Исключение
	 	Сообщить(НСтр("ru = 'При загрузке курсов произошла ошибка!'; en = 'Error loading rates!'"));
	КонецПопытки;
КонецПроцедуры
